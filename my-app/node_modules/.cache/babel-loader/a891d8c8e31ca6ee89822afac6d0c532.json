{"ast":null,"code":"var _jsxFileName = \"/Users/dannylim/Desktop/Development/Code/create-react-app/my-app/src/Components/forecast/forcast.js\";\nimport { Accordion, AccordionItem, AccordionItemPanel, AccordionItemHeading, AccordionItemButton } from 'react-accessible-accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nconst Forecast = _ref => {\n  let {\n    data\n  } = _ref;\n  const dayInAWeek = new Date().getDay();\n  const forcastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"title\",\n      children: \"Daily\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      allowZeroExpanded: true,\n      children: data.list.splice(0, 7).map((item, idx) => /*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n          children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"daily-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"weather\",\n                className: \"icon-small\",\n                src: `https://openweathermap.org/img/w/${item.weather[0].icon}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"day\",\n                children: forcastDays[idx]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"description\",\n                children: item.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"min-max\",\n                children: [Math.round(item.main.temp_min), \" \\xB0C \", Math.round(item.main.temp_max)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["Accordion","AccordionItem","AccordionItemPanel","AccordionItemHeading","AccordionItemButton","WEEK_DAYS","Forecast","data","dayInAWeek","Date","getDay","forcastDays","slice","length","concat","list","splice","map","item","idx","weather","icon","description","Math","round","main","temp_min","temp_max"],"sources":["/Users/dannylim/Desktop/Development/Code/create-react-app/my-app/src/Components/forecast/forcast.js"],"sourcesContent":["import {\n  Accordion,\n  AccordionItem,\n  AccordionItemPanel,\n  AccordionItemHeading,\n  AccordionItemButton,\n} from 'react-accessible-accordion';\n\nconst WEEK_DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n\nconst Forecast = ({ data }) => {\n  const dayInAWeek = new Date().getDay();\n  const forcastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(\n    WEEK_DAYS.slice(0, dayInAWeek)\n  );\n\n  return (\n    <>\n      <label className=\"title\">Daily</label>\n      <Accordion allowZeroExpanded>\n        {data.list.splice(0, 7).map((item, idx) => (\n          <AccordionItem key={idx}>\n            <AccordionItemHeading>\n              <AccordionItemButton>\n                <div className=\"daily-item\">\n                  <img\n                    alt=\"weather\"\n                    className=\"icon-small\"\n                    src={`https://openweathermap.org/img/w/${item.weather[0].icon}.png`}\n                  />\n                  <label className=\"day\">{forcastDays[idx]}</label>\n                  <label className=\"description\">\n                    {item.weather[0].description}\n                  </label>\n                  <label className=\"min-max\">\n                    {Math.round( item.main.temp_min)} Â°C {Math.round( item.main.temp_max)}\n                  </label>\n                </div>\n              </AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel></AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </>\n  );\n};\n\nexport default Forecast;\n"],"mappings":";AAAA,SACEA,SADF,EAEEC,aAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,mBALF,QAMO,4BANP;;;AAQA,MAAMC,SAAS,GAAG,CAChB,QADgB,EAEhB,SAFgB,EAGhB,WAHgB,EAIhB,UAJgB,EAKhB,QALgB,EAMhB,UANgB,EAOhB,QAPgB,CAAlB;;AAUA,MAAMC,QAAQ,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC7B,MAAMC,UAAU,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAnB;EACA,MAAMC,WAAW,GAAGN,SAAS,CAACO,KAAV,CAAgBJ,UAAhB,EAA4BH,SAAS,CAACQ,MAAtC,EAA8CC,MAA9C,CAClBT,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmBJ,UAAnB,CADkB,CAApB;EAIA,oBACE;IAAA,wBACE;MAAO,SAAS,EAAC,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,iBAAiB,MAA5B;MAAA,UACGD,IAAI,CAACQ,IAAL,CAAUC,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,GAAvB,CAA2B,CAACC,IAAD,EAAOC,GAAP,kBAC1B,QAAC,aAAD;QAAA,wBACE,QAAC,oBAAD;UAAA,uBACE,QAAC,mBAAD;YAAA,uBACE;cAAK,SAAS,EAAC,YAAf;cAAA,wBACE;gBACE,GAAG,EAAC,SADN;gBAEE,SAAS,EAAC,YAFZ;gBAGE,GAAG,EAAG,oCAAmCD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,IAAK;cAHhE;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAME;gBAAO,SAAS,EAAC,KAAjB;gBAAA,UAAwBV,WAAW,CAACQ,GAAD;cAAnC;gBAAA;gBAAA;gBAAA;cAAA,QANF,eAOE;gBAAO,SAAS,EAAC,aAAjB;gBAAA,UACGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBE;cADnB;gBAAA;gBAAA;gBAAA;cAAA,QAPF,eAUE;gBAAO,SAAS,EAAC,SAAjB;gBAAA,WACGC,IAAI,CAACC,KAAL,CAAYN,IAAI,CAACO,IAAL,CAAUC,QAAtB,CADH,aACwCH,IAAI,CAACC,KAAL,CAAYN,IAAI,CAACO,IAAL,CAAUE,QAAtB,CADxC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAVF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAmBE,QAAC,kBAAD;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA,GAAoBR,GAApB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AA8BD,CApCD;;KAAMb,Q;AAsCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}