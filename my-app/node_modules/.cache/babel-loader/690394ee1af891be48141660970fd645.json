{"ast":null,"code":"var _jsxFileName = \"/Users/dannylim/Desktop/Development/Code/create-react-app/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Search from './Components/Search/search';\nimport Forecast from './Components/forecast/forcast';\nimport CurrentWeather from './Components/current-weather/current-weather';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api'; // import { promises } from 'fs-extra';\n\nimport { useState } from 'react'; // import Header from './Header';\n// import { Route, routes } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(' ');\n    const CurrentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([CurrentWeatherFetch, forcastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WWp4biUQ6yxZ26omAvrL3l/oQ6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Forecast","CurrentWeather","WEATHER_API_URL","WEATHER_API_KEY","useState","NavBar","App","currentWeather","setCurrentWeather","forecast","setForecast","handleOnSearchChange","searchData","lat","lon","value","split","CurrentWeatherFetch","fetch","forcastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","console","log"],"sources":["/Users/dannylim/Desktop/Development/Code/create-react-app/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './Components/Search/search';\nimport Forecast from './Components/forecast/forcast';\nimport CurrentWeather from './Components/current-weather/current-weather';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\n// import { promises } from 'fs-extra';\nimport { useState } from 'react';\n// import Header from './Header';\n// import { Route, routes } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './Components/NavBar/NavBar';\n\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(' ');\n\n    const CurrentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    const forcastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([CurrentWeatherFetch, forcastFetch])\n      .then(async response => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n      })\n      .catch(err => console.log(err));\n  };\n\n  console.log(forecast);\n\n  return (\n  \n    <div className=\"Container\">\n      <NavBar />\n      {/* <Search onSearchChange={handleOnSearchChange} />\n      {currentWeather && <CurrentWeather data={currentWeather} />}\n      {forecast && <Forecast data={forecast} />} */}\n    </div>\n  );\n  \n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,OAAjD,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;AACA;;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMO,oBAAoB,GAAGC,UAAU,IAAI;IACzC,MAAM,CAACC,GAAD,EAAMC,GAAN,IAAaF,UAAU,CAACG,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,CAAnB;IAEA,MAAMC,mBAAmB,GAAGC,KAAK,CAC9B,GAAEhB,eAAgB,gBAAeW,GAAI,QAAOC,GAAI,UAASX,eAAgB,eAD3C,CAAjC;IAIA,MAAMgB,YAAY,GAAGD,KAAK,CACvB,GAAEhB,eAAgB,iBAAgBW,GAAI,QAAOC,GAAI,UAASX,eAAgB,eADnD,CAA1B;IAIAiB,OAAO,CAACC,GAAR,CAAY,CAACJ,mBAAD,EAAsBE,YAAtB,CAAZ,EACGG,IADH,CACQ,MAAMC,QAAN,IAAkB;MACtB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,EAA9B;MACA,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAD,CAAR,CAAYE,IAAZ,EAA/B;MAEAjB,iBAAiB,CAAC;QAAEmB,IAAI,EAAEf,UAAU,CAACgB,KAAnB;QAA0B,GAAGJ;MAA7B,CAAD,CAAjB;MACAd,WAAW,CAAC;QAAEiB,IAAI,EAAEf,UAAU,CAACgB,KAAnB;QAA0B,GAAGF;MAA7B,CAAD,CAAX;IACD,CAPH,EAQGG,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARhB;EASD,CApBD;;EAsBAC,OAAO,CAACC,GAAR,CAAYvB,QAAZ;EAEA,oBAEE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFF;AAUD;;GAtCQH,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}